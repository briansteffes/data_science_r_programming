iris
irsi$species
iris$Species
install.packages("ggplot2")
ggplot2
installed.packages()
install.packages(c("devtools"))
library(devtools)
library(ggplot2)
old.packages()
update.packages()
y
old.packages()
remove.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
detach
detach()
library(ggplot2)
detach()
sessionInfo()
?devtools
help(devtools)
libary(devtools)
library(devtools)
?devtools
ls(pos = "package:devtools")
sessioninfo()
sessionInfo()
install.packages("KernSmooth")
library(KernSmooth)
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1., 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
z + 555 + z
c(z, 555,  z)
z*2 + 100
my_sqrt <- sqrt(z - 1)
print(z)
z
print(my_sqrt)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
help(list)
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create("testdir")
play()
dir()
nxt()
setwd("testdir/")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
play()
my_info <- file.info("mytest.R")
class(my_info)
my_info$mode
nxt()
args(file.rename)
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path(folder1,folder2)
file.path("folder1","folder2")
dir()
?dir.create
dir.create(file.path("testdir2/testdir3",recursive=T))
dir.create(file.path("testdir2/testdir3"),recursive=T)
dir.create(file.path("testdir2/testdir3"),recursive=T))
dir.create(file.path("testdir2/testdir3"),recursive=TRUE)
dir()
nxt()
skip()
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
play()
?seq
nxt()
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each = 10)
swirl()
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name <- c(my_char, "Patrick")
my_name
paste(my_name, collapse = " ")
paste("Hello","world!",sep = " ")
past(1:3,c("X","Y","Z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
play()
x[x<0]
nxt()
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
class(vvect)
class(vect)
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect$bar
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector$dim
?`$`
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_matrix
my_data <- data.frame(patients, my_matrix[])
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames("patient","age","weight","bp","rating","test")
cnames <- ("patient","age","weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
?colnames
colnames(my_data) <- cnames
my_data
swirl()
quit()
x <- 1
x += 1
x++
x
x
x
x + <- 1
x <- 1:20
x>n
x > 10
y <- x > 10
x[y]
x[x>10]
x <- 1:20
dim(x) <- (4,5)
dim(x) <- (4 5)
dim(x) <- (4,5)
?dim
dim(x) <- c(4,5)
class(x)
x
my_columns <- ncol(x)
my_columns
nc <- numeric(my_columns)
nc
colummean <- function(y) {
nc <- ncol(y)       #get the number of columns in y
means <- numeric(nc) #set an empty vector the length of nc
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
ls
swirl()
swirl
library(swirl)
rm(list=ls())
swirl()
nxt()
leave()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
x < 7
6 < 7
10 >= 10
10 <= 10
5!=7
5 != 7
!(5 == 7)
F & F
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
sys.date()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(c(4,5,10))
x <- 1:10
if(x > 5) {
x <- 0
}
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divi)
remainder(divisor=11,num = 5)
remainder(4,div=2)
args(remainder)
submit()
submit()
play()
florr(11.1)
floor(11.1)
floor(11.1)
nxt()
submit()
evaluate(stdv,c(1.4, 3.6, 7.9, 8.8))
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
telegram("gail force winds out of Nanaimo heading north northwest")
submit()
submit()
mad_libs
mad_libs()
submit()
'I' %p% 'love' %p% 'R'
'I' %p% 'love' %p% 'R!'
ls()
ls
?ls
workingdir
getwd()
ls()
list.files()
getwd() + "/projects"
paste(getwd(),"projects","/")
?paste
paste(getwd(),"projects",sep="/")
setwd(paste(getwd(),"projects",sep="/"))
getwd
detwd()
getwd()
list.files()
list.files()[3]
setwd("/Users/briansteffes/projects/data_science_specialization/r_programming/project_1/specdata")
list.files()
get.csv("281.csv")
mydata <- read.csv("281.csv")
mydaata
mydata
dim(mydata)
names(mydata)
